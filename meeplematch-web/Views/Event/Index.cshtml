@model IEnumerable<meeplematch_web.Models.EventViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="bg-dark py-5" data-aos="fade-up" data-aos-duration="1000">
    <div class="container">
        <h2 class="display-6 mb-4 text-white">All Events</h2>

        <div class="row mb-3 justify-content-between">
            <div class="col-12 col-md-3 mb-2 mb-md-0">
                <a asp-action="Create" class="btn btn-primary w-100">Create New</a>
            </div>
            <div class="col-12 col-md-5">
                <input type="text" id="searchInput" class="form-control" placeholder="Search by Event name or game" />
            </div>
        </div>

        <div class="row g-4" id="eventList">
            @foreach (var item in Model)
            {
                <div class="col-12 col-sm-6 col-lg-3">
                    <div class="card h-100 shadow-sm" data-aos="flip-right" data-aos-duration="1500">
                        <img src="@(!string.IsNullOrEmpty(item.ImagePath) ? item.ImagePath : Url.Content("~/assets/images/game_night_placeholder.png"))"
                             class="card-img-top event-img" />

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-black">@item.Name</h5>
                            <h6 class="card-subtitle mb-2 text-muted">
                                @item.EventDate.ToString("ddd, dd MMMM - HH:mm") h
                            </h6>
                            <p class="card-text mb-1 text-black">
                                <strong>Hosted by:</strong> @(item.CreatedByNavigation?.Username ?? "Unknown")
                            </p>
                            <p class="card-text text-muted" style="font-size: 0.875rem;">
                                Game: @item.Game<br />
                                Type: @item.Type<br />
                                Location: @item.Location
                            </p>
                            <p class="mt-auto text-black">
                                <strong>4464/@item.Capacity</strong> players registered @* number of signed up players needed  *@
                            </p>
                            <div class="mt-2 text-center">
                                <a asp-action="Details" asp-route-id="@item.IdEvent" class="btn btn-sm btn-outline-primary">Details</a>
                                <a asp-action="Edit" asp-route-id="@item.IdEvent" class="btn btn-sm btn-outline-secondary">Edit</a>
                                <a class="btn btn-sm btn-outline-danger" href="/Event/Delete/@item.IdEvent">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>


        <div class="d-flex justify-content-center mt-4">
            <ul class="pagination">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, search = Context.Request.Query["search"] })">@i</a>
                    </li>
                }
            </ul>
        </div>

    </div>
</div>

<div id="eventList">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Game)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Location)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EventDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Capacity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinParticipants)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedAt)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Game)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinParticipants)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedAt)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.IdEvent" class="btn btn-info">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.IdEvent" class="btn btn-warning">Details</a>
                        @* <a asp-action="Delete" asp-route-id="@item.IdEvent" class="btn btn-danger">Delete</a> *@
                        @* <a class="btn btn-danger" href="/Event/Delete/@item.IdEvent">Delete</a> *@
                        <a asp-action="Delete2" asp-route-id="@item.IdEvent" class="btn btn-danger">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
</div>
@section Scripts {
    <script>
        const searchInput = document.getElementById("searchInput");

        searchInput.addEventListener("input", function () {
            const searchQuery = searchInput.value;

            fetch(`/Event/Index?search=${encodeURIComponent(searchQuery)}`, {
                method: "GET",
                headers: {
                    "X-Requested-With": "XMLHttpRequest"
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.text();
                })
                .then(data => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(data, "text/html");
                    const updatedCards = doc.querySelector("#eventList").innerHTML;
                    document.querySelector("#eventList").innerHTML = updatedCards;
                    AOS.refresh(); 
                })
                .catch(error => console.error("Error fetching events:", error));
        });
    </script>
}
